# Thiample resource file for rTorrent. Copy to
# ~/.rtorrent.rc and enable/modify the options as needed. Remember to
# uncomment the options you wish to enable.

# Maximum and minimum number of peers to connect to per torrent.
#min_peers = 10
max_peers = 100

# Same as above but for seeding completed torrents (-1 = same as downloading)
#min_peers_seed = 5
max_peers_seed = 20

# Maximum number of simultanious uploads per torrent.
max_uploads = 10

# Global upload and download rate in KiB. "0" for unlimited.
download_rate = 0
upload_rate = 150

# Default directory to save the downloaded torrents.
#directory = /home/daniel/Downloads/
directory = ~/Nedlastinger/Torrents


# Default session directory. Make sure you don't run multiple instance
# of rtorrent using the same session directory. Perhaps using a
# relative path?
#session = ~/.cache/rtorrent/session

# Watch a directory for new torrents, and stop those that have been deleted.
#schedule = watch_directory,5,5,"load_start=~/.cache/rtorrent/torrents/*.torrent"
#schedule = tied_directory,5,5,start_tied=
#schedule = untied_directory,5,5,close_untied=
#schedule = untied_directory,5,5,remove_untied=

  #d.set_custom1=vlc1,"execute=vlc,$d.get_base_path="

# Run move script of completed torrents to place them according to their type
#system.method.set_key = event.download.finished,run_me,"execute={~/./.rtmove,$d.get_base_path=}" 

# When torrent is removed delete the files.
  #system.method.set_key = event.download.erased,remove_file1,"execute={rm,-rf,--,$d.get_base_path=}"
system.method.set_key = event.download.erased,remove_file2,"execute={~/./.rtremove,$d.get_name=,$d.get_hash=}"
#system.method.set_key = event.download.erased,remove_file2,"execute={~/./.rtremove,$d.get_name=}"
  #;rm,-drf,--,~/Videos/,$d.get_name=}"

# Close torrents when diskspace is low.
schedule = low_diskspace,5,60,close_low_diskspace=100M

# The ip address reported to the tracker.
#ip = 127.0.0.1
#ip = rakshasa.no

# The ip address the listening socket and outgoing connections is
# bound to.
#bind = 127.0.0.1
#bind = rakshasa.no

# Port range to use for listening.
port_range = 49111-49111

# Start opening ports at a random position within the port range.
#port_random = no

# Check hash for finished torrents. Might be usefull until the bug is
# fixed that causes lack of diskspace not to be properly reported.
check_hash = yes

# Set whetever the client should try to connect to UDP trackers.
#use_udp_trackers = yes

# Alternative calls to bind and ip that should handle dynamic ip's.
#schedule = ip_tick,0,1800,ip=rakshasa
#schedule = bind_tick,0,1800,bind=rakshasa

# Encryption options, set to none (default) or any combination of the following:
# allow_incoming, try_outgoing, require, require_RC4, enable_retry, prefer_plaintext
#
# The example value allows incoming encrypted connections, starts unencrypted
# outgoing connections but retries with encryption if they fail, preferring
# plaintext to RC4 encryption after the encrypted handshake
#
 encryption = allow_incoming,try_outgoing,enable_retry

# Enable DHT support for trackerless torrents or when all trackers are down.
# May be set to "disable" (completely disable DHT), "off" (do not start DHT),
# "auto" (start and stop DHT as needed), or "on" (start DHT immediately).
# The default is "off". For DHT to work, a session directory must be defined.
# 
 dht = auto

# UDP port to use for DHT. 
# 
 dht_port = 6881

# Enable peer exchange (for torrents not marked private)
#
 peer_exchange = yes



# Colors # only in rtorrent extended
## Colors: 0 = black, 1 = red, 2 = green, 3 = yellow, 4 = blue, 5 = magenta, 6 = cyan, 7 = white

color_finished_fg = 2
color_inactive_fg = 3
#done_fg_color = 3
#done_bg_color
color_active_fg = 7
#active_bg_color
color_dead_fg = 1

# UI/VIEW: Colors
#ui.color.alarm.set="bold white on red"
#ui.color.complete.set="bright green"
#ui.color.even.set=""
#ui.color.focus.set="reverse"
#ui.color.footer.set="bold bright cyan on blue"
#ui.color.incomplete.set="yellow"
#ui.color.info.set="white"
#ui.color.label.set="gray"
#ui.color.leeching.set="bold bright yellow"
#ui.color.odd.set=""
#ui.color.progress0.set="red"
#ui.color.progress20.set="bold bright red"
#ui.color.progress40.set="bold bright magenta"
#ui.color.progress60.set="yellow"
#ui.color.progress80.set="bold bright yellow"
#ui.color.progress100.set="green"
#ui.color.progress120.set="bold bright green"
#ui.color.queued.set="magenta"
#ui.color.seeding.set="bold bright green"
#ui.color.stopped.set="blue"
#ui.color.title.set="bold bright white on blue"

#
# Do not modify the following parameters unless you know what you're doing.
#

# Hash read-ahead controls how many MB to request the kernel to read
# ahead. If the value is too low the disk may not be fully utilized,
# while if too high the kernel might not be able to keep the read
# pages in memory thus end up trashing.
#hash_read_ahead = 10

# Interval between attempts to check the hash, in milliseconds.
#hash_interval = 100

# Number of attempts to check the hash while using the mincore status,
# before forcing. Overworked systems might need lower values to get a
# decent hash checking rate.
#hash_max_tries = 10
